{"version":3,"sources":["api/index.js","components/Feature.js","components/Loading.js","components/Preview.js","components/Search.js","components/Title.js","index.js"],"names":["BASE_URL","KEY","fetchQueryResultsFromTermAndValue","term","value","a","fetch","encodeURI","split","join","response","json","data","fetchQueryResultsFromURL","url","fetchQueryResults","century","classification","queryString","fetchAllCenturies","localStorage","getItem","JSON","parse","records","setItem","stringify","fetchAllClassifications","Searchable","searchTerm","searchValue","setIsLoading","setSearchResults","className","href","onClick","event","preventDefault","result","console","error","Feature","featuredResult","record","title","dated","images","primaryimageurl","description","culture","style","technique","medium","dimensions","people","department","division","contact","creditline","id","Fragment","toLowerCase","map","person","idx","key","prefix","name","image","src","alt","Loading","PureComponent","Preview","setFeaturedResult","searchResults","info","fetchPage","pageUrl","results","disabled","prev","next","index","Search","useState","centuryList","setCenturyList","classificationList","setClassificationList","setQueryString","setCentury","setClassification","useEffect","Promise","all","then","centuries","classifications","catch","onSubmit","fetchResult","htmlFor","type","placeholder","onChange","target","length","item","Title","App","isLoading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eefcb13f.chunk.js","sourcesContent":["\nexport const BASE_URL = 'https://api.harvardartmuseums.org';\nexport const KEY = 'apikey=be2c397a-8147-4d70-af64-be2bd722fef2';\n\nexport async function fetchQueryResultsFromTermAndValue(term, value) {\n  try {\n    const response = await fetch(`${ BASE_URL }/object?${ KEY }&${ term }=${ encodeURI(value.split('-').join('|')) }`);\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchQueryResultsFromURL(url) {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchQueryResults({\n  century,\n  classification,\n  queryString,\n}) {\n  const url = `${ BASE_URL }/object?${ KEY }&classification=${ classification }&century=${ \n    century }&keyword=${ queryString }`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchAllCenturies() {\n  if (localStorage.getItem('centuries')) {\n    return JSON.parse(localStorage.getItem('centuries'));\n  }\n\n  const url = `${ BASE_URL }/century?${ KEY }&size=100&sort=temporalorder`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const records = data.records;\n\n    localStorage.setItem('centuries', JSON.stringify(records));\n\n    return records;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchAllClassifications() {\n  if (localStorage.getItem('classifications')) {\n    return JSON.parse(localStorage.getItem('classifications'));\n  }\n\n  const url = `${ BASE_URL }/classification?${ KEY }&size=100&sort=name`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const records = data.records;\n\n    localStorage.setItem('classifications', JSON.stringify(records));\n\n    return records;\n  } catch (error) {\n    throw error;\n  }\n}","import React, { Fragment } from 'react';\n\nimport { fetchQueryResultsFromTermAndValue } from '../api';\n\n\nconst Searchable = ({ searchTerm, searchValue, setIsLoading, setSearchResults }) => {\n\n  return (\n    <span className=\"content\">\n      <a href=\"#\" onClick={async (event) => {\n        event.preventDefault();\n        setIsLoading(true);\n\n        try {\n          const result = await fetchQueryResultsFromTermAndValue( searchTerm, searchValue );\n          setSearchResults(result);\n        } catch (error) {\n          console.error(error)\n        } finally {\n          setIsLoading(false)\n        }\n      }}>{searchValue}</a>\n    </span>\n  )\n}\n\nconst Feature = ({ featuredResult, setIsLoading, setSearchResults }) => {\n\n  if (!featuredResult) {\n    return <main id=\"feature\"></main>\n  } else {\n    const { record: { title, dated, images, primaryimageurl, description, culture,\n      style, technique, medium, dimensions, people, department, division, contact, creditline } } = featuredResult;\n\n    return <main id=\"feature\">\n      <div className=\"object-feature\">\n        <header>\n          <h3>{title}</h3>\n          <h4>{dated}</h4>\n        </header>\n        <section className=\"facts\">\n          {description ?\n            <React.Fragment>\n              <span className=\"title\">Description</span>\n              <span className=\"content\">{description}</span>\n            </React.Fragment> : null\n          }\n          {culture ?\n            <React.Fragment>\n              <span className=\"title\">Culture</span>\n              <span className=\"content\"><Searchable setIsLoading={setIsLoading} setSearchResults={setSearchResults} searchTerm={'culture'} searchValue={culture} /></span>\n            </React.Fragment> : null\n          }\n          {style ?\n            <React.Fragment>\n              <span className=\"title\">Style</span>\n              <span className=\"content\">{style}</span>\n            </React.Fragment> : null\n          }\n          {technique ?\n            <React.Fragment>\n              <span className=\"title\">Technique</span>\n              <span className=\"content\"><Searchable setIsLoading={setIsLoading} setSearchResults={setSearchResults} searchTerm={'technique'} searchValue={technique} /></span>\n            </React.Fragment> : null\n          }\n          {medium ?\n            <React.Fragment>\n              <span className=\"title\">Medium</span>\n              <span className=\"content\"><Searchable setIsLoading={setIsLoading} setSearchResults={setSearchResults} searchTerm={'medium'} searchValue={medium.toLowerCase()} /></span>\n            </React.Fragment> : null\n          }\n          {dimensions ?\n            <React.Fragment>\n              <span className=\"title\">Dimensions</span>\n              <span className=\"content\">{dimensions}</span>\n            </React.Fragment> : null\n          }\n          {people ?\n            <React.Fragment>\n              <span className=\"title\">People</span>\n              {\n                people ?\n                  people.map((person, idx) => {\n                    return <span key={idx} className=\"content\">{person.prefix} <Searchable setIsLoading={setIsLoading} setSearchResults={setSearchResults} searchTerm={'person'} searchValue={person.name} /></span>\n                  })\n                  : null\n              }\n            </React.Fragment> : null\n          }\n          {department ?\n            <React.Fragment>\n              <span className=\"title\">Department</span>\n              <span className=\"content\">{department}</span>\n            </React.Fragment> : null\n          }\n          {division ?\n            <React.Fragment>\n              <span className=\"title\">Division</span>\n              <span className=\"content\">{division}</span>\n            </React.Fragment> : null\n          }\n          {contact ?\n            <React.Fragment>\n              <span className=\"title\">Contact</span>\n              <span className=\"content\">{contact}</span>\n            </React.Fragment> : null\n          }\n          {creditline ?\n            <React.Fragment>\n              <span className=\"title\">Creditline</span>\n              <span className=\"content\">{creditline}</span>\n            </React.Fragment> : null\n          }\n        </section>\n        <section className=\"photos\">\n          {\n            images ?\n              images.map((image, idx) => {\n                return <img key={idx} src={primaryimageurl} alt={image}></img>\n              })\n              : null\n          }\n\n        </section>\n      </div>\n    </main>\n  }\n\n}\n\nexport default Feature;","import React from 'react';\nimport { PureComponent } from 'react';\n\n\nclass Loading extends PureComponent {\n\n    render() {\n    return <div id=\"loading\">\n                <h2 className=\"message\">Searching...</h2>\n            </div>\n    }\n\n}\n\nexport default Loading\n","import React from 'react';\n\nimport { fetchQueryResultsFromURL } from '../api';\n\nconst Preview = ({ setSearchResults, setFeaturedResult, setIsLoading, searchResults: {info, records} }) => {\n  \n  async function fetchPage(pageUrl) {\n    setIsLoading(true);\n\n    try {\n      const results = await fetchQueryResultsFromURL(pageUrl);\n      setSearchResults(results);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return <aside id=\"preview\">\n    <header className=\"pagination\">\n      <button \n        disabled={!info.prev} \n        className=\"previous\"\n        onClick={(event) => {fetchPage(info.prev)}}>Previous</button>\n      <button\n        disabled={!info.next}\n        className=\"next\"\n        onClick={(event) => {fetchPage(info.next)}}>Next</button>\n    </header>\n    <section className=\"results\">\n      {\n        records.map((record, index) => {\n          return <div  \n            key={ index }\n            className=\"object-preview\"\n            onClick={(event) => {\n              event.preventDefault();\n              setFeaturedResult({record})\n            }}>\n            { \n            record.primaryimageurl ? <img src={ record.primaryimageurl } alt={ record.description } /> : null\n            }\n            {\n              record.title ? <h3>{ record.title }</h3> : <h3>MISSING INFO</h3>\n            }\n          </div>\n        })\n      }\n    </section>\n  </aside>\n}\n\nexport default Preview;","import React, { useEffect, useState } from 'react';\n\nimport { \n  fetchAllCenturies,\n  fetchAllClassifications,\n  fetchQueryResults\n} from '../api';\n\nconst Search = ({setIsLoading, setSearchResults}) => {\n\n   const [centuryList, setCenturyList] = useState([]);\n   const [classificationList, setClassificationList] = useState([]);\n   const [queryString, setQueryString] = useState('');\n   const [century, setCentury] = useState('any');\n   const [classification, setClassification] = useState('any');\n\n  useEffect(() => {\n    Promise.all([fetchAllCenturies(), fetchAllClassifications()])\n    .then(([centuries, classifications]) => { \n      setCenturyList(centuries);\n      setClassificationList(classifications);\n    })\n    .catch(error => console.error(error))\n\n  }, []);\n\n  return <form id=\"search\" onSubmit={async (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const fetchResult = await fetchQueryResults({ century, classification, queryString })\n      setSearchResults(fetchResult)\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n    \n  }}>\n    <fieldset>\n      <label htmlFor=\"keywords\">Query</label>\n      <input \n        id=\"keywords\" \n        type=\"text\" \n        placeholder=\"enter keywords...\" \n        value={\n        queryString\n        } \n        onChange={\n        event => setQueryString(event.target.value)\n        }/>\n    </fieldset>\n    <fieldset>\n      <label htmlFor=\"select-classification\">Classification <span className=\"classification-count\">({ classificationList.length })</span></label>\n      <select \n        name=\"classification\"\n        id=\"select-classification\"\n        value={\n        classification\n        } \n        onChange={\n        event => setClassification(event.target.value)\n        }>\n        <option value=\"any\">Any</option>\n        {\n        classificationList.map((item, idx) => {\n            return <option key={idx} value={item.name}>{item.name}</option>\n          })\n        }\n      </select>\n    </fieldset>\n    <fieldset>\n      <label htmlFor=\"select-century\">Century <span className=\"century-count\">({ centuryList.length })</span></label>\n      <select \n        name=\"century\" \n        id=\"select-century\"\n        value={\n        century\n        } \n        onChange={\n        event => setCentury(event.target.value)\n        }>\n        <option value=\"any\">Any</option>\n        {\n        centuryList.map((item, idx) => {\n          return <option key={idx} value={item.name}>{item.name}</option>\n        })\n      }\n      </select>\n     </fieldset>\n    <button>SEARCH</button>\n  </form>\n}\n\nexport default Search;","import React from 'react';\nimport { PureComponent } from 'react';\n\n\nclass Title extends PureComponent {\n    render() {\n\n    return <div id=\"title\">\n            <h1>\n                The Art Collector\n            </h1>\n            <h5>\n                Search the Harvard Art Museums' Private Collections\n            </h5>\n        </div>\n    }\n\n\n\n}\n\nexport default Title;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  Feature,\n  Loading,\n  Preview,\n  Search,\n  Title\n} from './components';\n\nconst App = () => {\n   const [searchResults, setSearchResults] = useState({info: {}, records: []});\n   const [featuredResult, setFeaturedResult] = useState(null);\n   const [isLoading, setIsLoading] = useState(false);\n\n  return <div className=\"app\">\n    <Title />\n    <Search setIsLoading={setIsLoading} setSearchResults={setSearchResults} />\n    <Preview searchResults={searchResults} setIsLoading={setIsLoading} setSearchResults={setSearchResults} setFeaturedResult={setFeaturedResult} />\n    <Feature featuredResult={featuredResult} setIsLoading={setIsLoading} setSearchResults={setSearchResults} />\n    {isLoading ? <Loading /> : null}\n  </div>\n}\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n)"],"sourceRoot":""}